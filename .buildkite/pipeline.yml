env:
  JULIA_DEPOT_PATH: "$PWD/.julia"
  CUDA_VISIBLE_DEVICES: 3

steps:
  - label: "üèïÔ∏è initialize environment"
    commands:
      - "wget https://julialang-s3.julialang.org/bin/linux/x64/1.4/julia-1.4.2-linux-x86_64.tar.gz"
      - "tar xf julia-1.4.2-linux-x86_64.tar.gz"
      - "./julia-1.4.2/bin/julia --color=yes --project -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "./julia-1.4.2/bin/julia --color=yes --project -e 'using Pkg; Pkg.precompile()'"
      - "./julia-1.4.2/bin/julia --color=yes --project -e 'using Pkg; Pkg.status()'"
      # force the initialization of the CUDA runtime as it is lazily loaded by default
      - "./julia-1.4.2/bin/julia --color=yes --project -e 'using CUDA; CUDA.versioninfo()'"
    agents:
      queue: tartarus

  - wait

  - label: "üêá unit tests"
    env:
      TEST_GROUP: "unit"
    commands:
      - "wget https://julialang-s3.julialang.org/bin/linux/x64/1.4/julia-1.4.2-linux-x86_64.tar.gz"
      - "tar xf julia-1.4.2-linux-x86_64.tar.gz"
      - "./julia-1.4.2/bin/julia --color=yes --project -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "./julia-1.4.2/bin/julia --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: tartarus


  - label: "üê¨ model tests"
    env:
      TEST_GROUP: "model"
    commands:
      - "wget https://julialang-s3.julialang.org/bin/linux/x64/1.4/julia-1.4.2-linux-x86_64.tar.gz"
      - "tar xf julia-1.4.2-linux-x86_64.tar.gz"
      - "./julia-1.4.2/bin/julia --color=yes --project -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "./julia-1.4.2/bin/julia --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: tartarus

  - label: "üê≥ simulation tests"
    env:
      TEST_GROUP: "simulation"
    commands:
      - "wget https://julialang-s3.julialang.org/bin/linux/x64/1.4/julia-1.4.2-linux-x86_64.tar.gz"
      - "tar xf julia-1.4.2-linux-x86_64.tar.gz"
      - "./julia-1.4.2/bin/julia --color=yes --project -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "./julia-1.4.2/bin/julia --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: tartarus
 
  - label: "üê´ regression tests"
    env:
      TEST_GROUP: "regression"
    commands:
      - "wget https://julialang-s3.julialang.org/bin/linux/x64/1.4/julia-1.4.2-linux-x86_64.tar.gz"
      - "tar xf julia-1.4.2-linux-x86_64.tar.gz"
      - "./julia-1.4.2/bin/julia --color=yes --project -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "./julia-1.4.2/bin/julia --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: tartarus

  - label: "ü¶ç scripts"
    env:
      TEST_GROUP: "scripts"
    commands:
      - "wget https://julialang-s3.julialang.org/bin/linux/x64/1.4/julia-1.4.2-linux-x86_64.tar.gz"
      - "tar xf julia-1.4.2-linux-x86_64.tar.gz"
      - "./julia-1.4.2/bin/julia --color=yes --project -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "./julia-1.4.2/bin/julia --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: tartarus

  # - label: "ü¶ï convergence tests"
  #   env:
  #     TEST_GROUP: "convergence"
  #   commands:
  #     - "wget https://julialang-s3.julialang.org/bin/linux/x64/1.4/julia-1.4.2-linux-x86_64.tar.gz"
  #     - "tar xf julia-1.4.2-linux-x86_64.tar.gz"
  #     - "./julia-1.4.2/bin/julia --color=yes --project -e 'using Pkg; Pkg.instantiate()'"
  #     - "./julia-1.4.2/bin/julia --color=yes --project -e 'using Pkg; Pkg.test()'"
  #   agents:
  #     queue: tartarus

  - label: "ü¶â documentation"
    commands:
      - "wget https://julialang-s3.julialang.org/bin/linux/x64/1.4/julia-1.4.2-linux-x86_64.tar.gz"
      - "tar xf julia-1.4.2-linux-x86_64.tar.gz"
      - "./julia-1.4.2/bin/julia --color=yes --project=docs/ -e 'using Pkg; Pkg.instantiate(); Pkg.develop(PackageSpec(path=pwd()))'"
      - "./julia-1.4.2/bin/julia --color=yes --project=docs/ docs/make.jl"
    agents:
      queue: tartarus
