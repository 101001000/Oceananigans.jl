env:
  JULIA_VERSION: "1.4.2"
  JULIA_MINOR_VERSION: "1.4"
  SVERDRUP_HOME: "/data5/glwagner"
  TARTARUS_HOME: "/var/lib/buildkite-agent"

steps:
  - label: "üèïÔ∏è initialize environment"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "init"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      # Download julia binaries
      - "wget -N -P $TARTARUS_HOME https://julialang-s3.julialang.org/bin/linux/x64/$JULIA_MINOR_VERSION/julia-$JULIA_VERSION-linux-x86_64.tar.gz"
      - "tar xf $TARTARUS_HOME/julia-$JULIA_VERSION-linux-x86_64.tar.gz -C $TARTARUS_HOME"

      # Instantiate, precompile, and download artifacts by running an empty testgroup and thereby executing /test/runtests.jl
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using Pkg; Pkg.instantiate(; verbose=true)'"
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using Pkg; Pkg.precompile()'"
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using Pkg; Pkg.status()'"
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU

  - label: "üèïÔ∏è initialize environment"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "init"
    commands:
      # Download julia binaries
      - "wget -N -P $SVERDRUP_HOME https://julialang-s3.julialang.org/bin/linux/x64/$JULIA_MINOR_VERSION/julia-$JULIA_VERSION-linux-x86_64.tar.gz"
      - "tar xf $SVERDRUP_HOME/julia-$JULIA_VERSION-linux-x86_64.tar.gz -C $SVERDRUP_HOME"

      # Instantiate and precompile 
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using Pkg; Pkg.instantiate(; verbose=true)'"
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using Pkg; Pkg.precompile()'"
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using Pkg; Pkg.status()'"

      # Force the initialization of the CUDA runtime as it is lazily loaded by default
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using CUDA; CUDA.versioninfo()'"

      # Download artifacts by running an empty testgroup and thereby executing /test/runtests.jl
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU

  # Wait until initialization completes before continuing to subsequent tasks 
  - wait

#####
##### Unit tests
#####

  - label: "üêá unit tests"
    env:
      TEST_GROUP: "unit"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU

  - label: "üêá unit tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "unit"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU

#####
##### Model
#####

  - label: "üê¨ model tests"
    env:
      TEST_GROUP: "model"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU

  - label: "üê¨ model tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "model"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU

#####
##### Simulation
#####

  - label: "üê≥ simulation tests"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "simulation"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU

  - label: "üê≥ simulation tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "simulation"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU

#####
##### Regression
#####

  - label: "üê´ regression tests"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "regression"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU

  - label: "üê´ regression tests"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "regression"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU

#####
##### Scripts
#####

  - label: "ü¶ç scripts"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "scripts"
    commands:
      - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: GPU

  - label: "ü¶ç scripts"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      TEST_GROUP: "scripts"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using Pkg; Pkg.test()'"
    agents:
      queue: Oceananigans
      architecture: CPU

  # - label: "ü¶ï convergence tests"
  #   env:
  #     TEST_GROUP: "convergence"
  #   commands:
  #     - "$SVERDRUP_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project -e 'using Pkg; Pkg.test()'"
  #   agents:
  #    queue: Oceananigans
  #    architecture: CPU
  
#####
##### Documentation
#####

  - label: "ü¶â documentation"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
    commands:
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project=docs/ -e 'using Pkg; Pkg.instantiate(); Pkg.develop(PackageSpec(path=pwd()))'"
      - "$TARTARUS_HOME/julia-$JULIA_VERSION/bin/julia --color=yes --project=docs/ docs/make.jl"
    agents:
      queue: Oceananigans
      architecture: CPU

  - wait: ~
    continue_on_failure: true

#####
##### Clean up
#####

  - label: "üßπ clean up environment"
    env:
      JULIA_DEPOT_PATH: "$SVERDRUP_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
    commands:
      - "rm -rf $JULIA_DEPOT_PATH"
    agents:
      queue: Oceananigans
      architecture: GPU

  - label: "üßπ clean up environment"
    env:
      JULIA_DEPOT_PATH: "$TARTARUS_HOME/.julia-$BUILDKITE_BUILD_NUMBER"
      CUDA_VISIBLE_DEVICES: "-1"
    commands:
      - "rm -rf $JULIA_DEPOT_PATH"
    agents:
      queue: Oceananigans
      architecture: CPU
